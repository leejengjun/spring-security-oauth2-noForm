server:
    port: 8081
spring:
    security:
        oauth2:
            client:

                registration:
#                    keycloak:
#                        authorization-grant-type: authorization_code
#                        client-id: oauth2-client-app
#                        client-name: oauth2-client-app
#                        client-secret: BWZb3QNtSrG3QxSc2V4aZouzYCcqFV09
#                        redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
#                        scope: profile,email,openid

                    google:
                        client-id: 12181520490-0a86cfnrui6u05hskb8mfsv9a731td1l.apps.googleusercontent.com
                        client-secret: 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
                        scope: openid,profile,email

                    naver:
                        client-id: Es1EbFfRrwHZYblGcGSp
                        client-secret: HWz11gaIXm
                        authorization-grant-type: authorization_code
                        client-name: naver-client-app2
                        redirect-uri: http://localhost:8081/login/oauth2/code/naver
                        scope: profile,email
#                        scope: openid,profile,email

                    kakao:
                        client-id: 6567bcba0377fb23fcec55e5df77375e
                        client-secret: zYTcCzRGazvyLgQ7k49LIF2WlA7grZsF
                        authorization-grant-type: authorization_code
                        client-authentication-method: POST
                        client-name: client-app2
                        redirect-uri: http://localhost:8081/login/oauth2/code/kakao
                        scope: openid,profile_nickname,profile_image,account_email
                        #scope: profile_nickname,profile_image,account_email

                provider:
#                    keycloak:
#                        authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
#                        issuer-uri: http://localhost:8080/realms/oauth2
#                        jwk-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
#                        token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
#                        user-info-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
#                        user-name-attribute: preferred_username
                    naver:
                        authorization-uri: https://nid.naver.com/oauth2.0/authorize
                        token-uri: https://nid.naver.com/oauth2.0/token
                        user-info-uri: https://openapi.naver.com/v1/nid/me
                        user-name-attribute: response

                    kakao:
                        # OpenID Connect 일 경우 jwkSet URI 를 가져와야 하기 때문에 필수항목
                        issuer-uri: https://kauth.kakao.com
                        authorization-uri: https://kauth.kakao.com/oauth/authorize
                        token-uri: https://kauth.kakao.com/oauth/token
                        user-info-uri: https://kapi.kakao.com/v2/user/me
                        user-name-attribute: id # OpenID Connect 로 인가서버와 통신하지 않을 경우

                        # OpenID Connect 일 경우 nameAttributeKey 가 sub 이기 때문에 별도의 커스트 마이징이 필요
                        # CustomOidcUserService 참조
                        # user-name-attribute: sub

    mvc:
      static-path-pattern: /static/**